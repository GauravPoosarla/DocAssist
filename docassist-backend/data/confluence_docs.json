[
  {
    "id": "65943",
    "title": "DocAssist Home",
    "summary": "This document serves as a welcome guide for new users to Confluence spaces. It emphasizes the importance of spaces in organizing and sharing team work effectively. The guide provides basic steps to get started, including editing content, adding various types of content, experimenting with formatting, and saving or publishing pages. Additionally, it offers inspiration through links to best practices, space setup guides, and templates to ease the process of creating and managing spaces.",
    "status": "processed"
  },
  {
    "id": "327684",
    "title": "Color Change Process in E-commerce Product Flow",
    "summary": "This feature enhances the user experience on e-commerce platforms by enabling seamless color selection and switching for products with multiple color variants. It ensures real-time updates to product images, prices, availability, and delivery information, while maintaining a unified product detail page experience. Key goals include improving UX, increasing variant discoverability, and reducing drop-offs due to miscommunication or poor UI. Success metrics include a 5% increase in conversions, a 10% increase in color variant switching, and a 20% reduction in bounce rates. Functional requirements include displaying color swatches, updating product details dynamically, and ensuring the cart reflects the selected color variant. Non-functional requirements focus on low latency, mobile optimization, accessibility, and scalability. User stories emphasize ease of use, mobile compatibility, and accurate cart representation. Dependencies include product catalog structure, media services, inventory services, and analytics frameworks.",
    "status": "processed"
  },
  {
    "id": "688132",
    "title": "GST Details Collection in Checkout Flow for B2B E-commerce",
    "summary": "This document outlines the implementation of GST (Goods and Services Tax) details collection in the B2B e-commerce checkout flow. The feature aims to enable B2B customers to input and validate their GST details during checkout, ensuring accurate invoicing, regulatory compliance, and eligibility for input tax credit (ITC). Key components include capturing and validating GSTIN, integrating with government APIs for verification, and persisting GST-related billing information. The solution addresses current issues such as manual errors, compliance risks, and support tickets for invoice modifications. Goals include collecting valid GSTIN, validating it using official databases, displaying GST-compliant invoice details, enabling customers to save GST info, and ensuring backend systems use GST data for tax calculations and reporting. Success metrics include 100% of B2B invoices including valid GST details, an 80% reduction in post-purchase support requests, a 50% increase in repeat purchases using saved GST profiles, and 100% compliance with GST invoice formatting and reporting standards.",
    "status": "processed"
  },
  {
    "id": "688152",
    "title": "Unified Login and Session Services Summary",
    "summary": "The document outlines the Unified Login and Session Services, which aim to enhance login success rates while ensuring secure and fast user access. It supports multiple authentication methods, including email-password, mobile OTP, and social logins, with the ability to link multiple methods to a single account. Key features include auto-logout after inactivity, device tracking, recent login history, and re-authentication prompts for sensitive actions. The user flow involves selecting a login method, authentication, session creation, and optional linking of social logins.",
    "status": "processed"
  },
  {
    "id": "688168",
    "title": "Pricing Rules & Promotion Engine",
    "summary": "The Pricing Rules & Promotion Engine is a backend module designed to allow business teams to configure dynamic pricing and promotional offers across various products, customer types, and regions. The objective is to empower non-technical users to manage price lists and create targeted promotional campaigns without requiring engineering support. Key requirements include tiered pricing per region and user segment, an 'if-this-then-that' promo builder, scheduling options, stackable vs non-stackable offer logic, and the ability to apply promotions at the cart, product, or category level. A user story highlights the need for a marketing manager to run a flash sale with a 15% discount on select brands in metro cities to drive weekend conversions. The user flow outlines the steps to create, preview, activate, and track promotional campaigns.",
    "status": "processed"
  },
  {
    "id": "688179",
    "title": "Fulfillment and Inventory Routing",
    "summary": "The document outlines a smart fulfillment and inventory routing system designed to optimize delivery experiences by automating order allocation, inventory checking, and warehouse-level fulfillment logic. The primary objective is to reduce delivery time and shipping costs by dynamically selecting fulfillment sources based on inventory availability and customer location. Key requirements include multi-warehouse inventory management, order splitting for items sourced from different locations, dynamic ETA calculation with SLA tagging, and integration with third-party logistics (3PL) and logistics APIs. The user story emphasizes assigning orders to the nearest warehouse with inventory to meet customer delivery SLAs. The user flow describes the process of placing an order with multiple SKUs, checking inventory across warehouses, splitting SKUs between warehouses, creating separate shipments, displaying split ETAs to the customer, and dispatching the order via 3PL.",
    "status": "processed"
  },
  {
    "id": "688213",
    "title": "Logistics & Fulfillment",
    "summary": "The document outlines functional and non-functional requirements for an e-commerce fulfillment system. Functional requirements include delivery ETA based on pin code, integration with 3PL services, pre-order functionality, real-time inventory sync, auto-splitting of orders, and automated email/SMS updates for order status. Non-functional requirements specify inventory sync frequency, instant ETA calculation, low API latency, and concurrency handling. User stories highlight customer needs for delivery timelines, warehouse managers' need for auto-routing orders, and users' desire for real-time delivery notifications.",
    "status": "processed"
  },
  {
    "id": "688229",
    "title": "Wishlist, Referrals & Loyalty",
    "summary": "The document outlines functional and non-functional requirements for three key features: Wishlist, Referrals, and Loyalty. For the Wishlist, logged-in users can add products, persist across sessions, and share via link or email. The Referral feature includes unique referral links, reward structures, fraud prevention, and tracking in the customer account. The Loyalty program involves points-based rewards, tiered benefits, and point redemption options. Non-functional requirements emphasize real-time syncing, fraud prevention, scalability, and GDPR compliance. User stories highlight customer needs for saving products, earning rewards, and tracking performance.",
    "status": "processed"
  },
  {
    "id": "720911",
    "title": "Multi-Method Payment Gateway Integration",
    "summary": "The document outlines the integration of a multi-method payment gateway to ensure a seamless and secure payment experience. It supports various payment methods such as cards, UPI, EMI, and BNPL, and includes retry logic for failed transactions. The system communicates transaction outcomes to the order engine and ensures PCI compliance for card storage. Key requirements include integrating popular payment gateways like Razorpay, Stripe, and PayU, supporting saved cards, and implementing a fallback mechanism for payment failures. The user flow involves redirecting users to the payment gateway, selecting a payment method, and handling success or failure scenarios with appropriate actions.",
    "status": "processed"
  },
  {
    "id": "720929",
    "title": "Pament Integration",
    "summary": "The document outlines functional and non-functional requirements for a payment system integration. Functional requirements include support for Shopify Payments, express checkout options, local payment methods via Razorpay or PayU, EMI and BNPL integrations, retry logic for failed payments, and currency conversion. Non-functional requirements focus on fast payment processing, clear error messaging, tokenization for returning customers, and PCI DSS compliance. User stories emphasize customer preferences for UPI/net banking, seamless retry functionality, and store needs for offering EMI options.",
    "status": "processed"
  },
  {
    "id": "753665",
    "title": "E-commerce Checkout Section Revamp",
    "summary": "The document outlines a revamp of the e-commerce checkout section to streamline and optimize the user experience, aiming to reduce cart abandonment and improve conversion rates. Key goals include simplifying the checkout flow, ensuring pricing clarity, and supporting all user types (guest, logged-in, first-time, returning). The design will integrate with payment gateways, order systems, and fraud prevention tools, while being scalable and extensible. Success metrics include a 20% reduction in checkout abandonment, a 30% decrease in checkout time, and a 15% increase in alternative payment method conversions. Functional requirements cover cart review, address selection, shipping methods, payment options, and error handling, while non-functional requirements focus on performance, security, and accessibility. User stories emphasize ease of use for various customer types, and dependencies include payment gateways, inventory APIs, and order services.",
    "status": "processed"
  },
  {
    "id": "753675",
    "title": "Centralized Inventory Management Logic for E-commerce Platform",
    "summary": "This document outlines the design for a centralized inventory management system for an e-commerce platform. The system aims to provide real-time stock tracking, allocation, reservation, and updates across multiple fulfillment channels, including warehouses, sellers, and stores. It supports both B2C and B2B use cases, handles high concurrency, and ensures consistent inventory views across product detail pages, cart, checkout, and admin systems. Key features include inventory consolidation, real-time reservation and lock mechanisms, multi-location inventory support, and APIs for real-time inventory reads and updates. The system also tracks inventory movements, provides low stock alerts, and includes a sellability rules engine to prevent overselling. Success metrics include a 90% reduction in order cancellations, inventory read latency under 100ms, and 100% sync accuracy between stock sources and product pages.",
    "status": "processed"
  },
  {
    "id": "753695",
    "title": "Checkout Flow",
    "summary": "The document outlines an intelligent multi-step checkout flow designed to optimize conversion by reducing drop-offs and providing a seamless, mobile-optimized experience. The checkout process includes four steps: address, delivery, payment, and review. Key features include autofill functionality using saved addresses or Google API, the ability to apply promo codes, and cross-selling opportunities like add-on warranties. The user flow begins with clicking 'Proceed to Checkout,' followed by address selection, delivery slot choice, coupon application, and payment method selection. The objective is to enable shoppers to complete their checkout in under a minute with pre-filled data and contextual suggestions.",
    "status": "processed"
  },
  {
    "id": "753711",
    "title": "Cart with Offers and Inventory Checks",
    "summary": "The Smart Cart feature aims to assist users in making informed purchase decisions by providing real-time stock availability, coupon suggestions, and savings details. Users can edit cart items, save items for later, or move them to a wishlist. The mini-cart UI is accessible across all pages. The user flow includes viewing the cart, selecting item quantities, applying coupons, receiving out-of-stock warnings, and proceeding to checkout. The goal is to enhance the shopping experience by displaying offers and inventory checks upfront.",
    "status": "processed"
  },
  {
    "id": "786442",
    "title": "Catalog Back Office Management",
    "summary": "The Catalog Back Office Management system provides a flexible and scalable interface for catalog operations, enabling category managers and merchandisers to create, manage, and publish product categories and listings across channels. Key features include the ability to create/edit/delete product categories, visibility toggles by channel and status, bulk import/export of product listings, SEO tagging support, and role-based access control. The system supports content enrichment, visibility control, and category hierarchy management. A user story highlights the need for bulk updates and visibility settings management to control product appearance across different storefronts. The user flow involves logging into the Admin Console, navigating to 'Catalog' > 'Manage Categories', creating or editing categories, setting visibility per channel, saving and previewing changes on staging, and publishing to production.",
    "status": "processed"
  },
  {
    "id": "786458",
    "title": "Self-Serve Returns and Exchange Module",
    "summary": "The Self-Serve Returns and Exchange Module aims to enhance the post-purchase experience by enabling customers to initiate return or replacement requests seamlessly. It automates backend approvals and logistics to reduce support ticket volume. Key features include eligibility checks based on product category and delivery date, image uploads for defect claims, refund options to the source or wallet, and replacement stock verification. The user flow involves selecting an item, choosing a reason, uploading images if needed, system validation, pickup scheduling, refund initiation, and confirmation emails.",
    "status": "processed"
  },
  {
    "id": "786468",
    "title": "Order Summary & Confirmation Module",
    "summary": "The Order Summary & Confirmation Module is designed to reassure customers of a successful order post-payment. It provides a detailed summary of the purchase, including items, estimated time of arrival (ETA), address, and payment details. The module also features dynamic status updates to keep users informed about the order's progress. Key call-to-action options include tracking the order, initiating a return, downloading the invoice, and sharing referral links. The user flow begins with completing the payment, followed by redirection to the Order Confirmation page, where users can view the itemized order list, delivery timeline, and available options.",
    "status": "processed"
  },
  {
    "id": "786489",
    "title": "PDP Product detailed page",
    "summary": "The document outlines functional and non-functional requirements for an e-commerce product page. Functional requirements include variant selection with dynamic updates, product specifications using Shopify metafields, estimated shipping dates, product reviews integration, add-to-cart functionality for in-stock items, and pricing breakdown. Non-functional requirements focus on performance (load time under 2 seconds), responsive design, accessibility (WCAG compliance), and SEO optimization. User stories highlight customer needs for clear product specifications, store owner needs for easy product data management, and mobile users' expectations for a seamless shopping experience.",
    "status": "processed"
  },
  {
    "id": "1146881",
    "title": "IOD FI Posting for B2B Stores",
    "summary": "Expense finance posting is the process of recording and categorizing business expenses in a company's accounting system, ensuring accurate financial reporting and informed decision-making. The document provides details on two stores: the Public Store and the CSK Store. The Public Store attributes include Cost Center (Abc), Profit Center (xyz), and GL Code (43), while the CSK Store attributes include Cost Center (Dhoni), Profit Center (Flemming), and GL Code (1234). The CSK Store has been used since the initial store setup.",
    "status": "processed"
  }
]